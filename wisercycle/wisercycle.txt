loginpage

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - WiserCycle</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            background: linear-gradient(135deg, #e0c3fc 0%, #8ec5fc 100%);
        }
        .login-container {
            transition: all 0.3s ease;
        }
    </style>
</head>
<body class="min-h-screen flex items-center justify-center p-4">
    <div class="login-container bg-white rounded-xl shadow-lg overflow-hidden max-w-md w-full">
        <div class="p-8">
            <h2 class="text-3xl font-bold text-pink-500 mb-2">Logo Here</h2>
            <p class="text-gray-600 mb-6">Welcome back !!!</p>

            <!-- Login Form -->
            <form id="loginForm" class="space-y-4">
                <div>
                    <label for="email" class="block text-gray-700 mb-2">Email</label>
                    <input 
                        type="email" 
                        id="email" 
                        placeholder="login@gmail.com" 
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500"
                        required
                    >
                </div>
                
                <div>
                    <label for="password" class="block text-gray-700 mb-2">Password</label>
                    <input 
                        type="password" 
                        id="password" 
                        placeholder="••••••••" 
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500"
                        required
                    >
                    <a href="#" class="text-sm text-pink-500 hover:underline block text-right mt-2">Forgot Password?</a>
                </div>
                
                <button 
                    type="submit" 
                    class="w-full bg-pink-500 text-white py-2 rounded-lg hover:bg-pink-600 transition duration-300"
                >
                    Login →
                </button>
            </form>
            
            <div class="mt-6 text-center">
                <p class="text-gray-600 mb-4">or continue with</p>
                <div class="flex justify-center space-x-4">
                    <button class="bg-gray-100 p-2 rounded-full hover:bg-gray-200">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="text-gray-700">
                            <path d="M20.283 10.356h-8.327v3.637h4.756c-.526 2.909-2.369 3.637-4.756 3.637a5.363 5.363 0 1 1 0-10.726 5.261 5.261 0 0 1 3.354 1.228l2.637-2.637C15.192 3.12 12.816 2 10.283 2a8.358 8.358 0 1 0 0 16.715c4.463 0 8.08-3.144 8.08-8.359a7.331 7.331 0 0 0-.18-1.858z"/>
                        </svg>
                    </button>
                    <button class="bg-gray-100 p-2 rounded-full hover:bg-gray-200">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="text-gray-700">
                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                        </svg>
                    </button>
                    <button class="bg-gray-100 p-2 rounded-full hover:bg-gray-200">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="text-gray-700">
                            <path d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z"/>
                        </svg>
                    </button>
                </div>
            </div>
            
            <div class="mt-6 text-center">
                <p class="text-gray-600">
                    Don't have an account yet? 
                    <a href="#" id="signupLink" class="text-pink-500 hover:underline">Sign up for free</a>
                </p>
            </div>
        </div>
    </div>

    <!-- Signup Modal -->
    <div id="signupModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white p-8 rounded-lg shadow-xl w-96">
            <h2 class="text-2xl font-bold text-pink-500 mb-6 text-center">Create Account</h2>
            <form id="signupForm" class="space-y-4">
                <div>
                    <label for="signupName" class="block text-gray-700 mb-2">Full Name</label>
                    <input 
                        type="text" 
                        id="signupName" 
                        placeholder="John Doe" 
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500"
                        required
                    >
                </div>
                <div>
                    <label for="signupEmail" class="block text-gray-700 mb-2">Email</label>
                    <input 
                        type="email" 
                        id="signupEmail" 
                        placeholder="email@example.com" 
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500"
                        required
                    >
                </div>
                <div>
                    <label for="signupPassword" class="block text-gray-700 mb-2">Password</label>
                    <input 
                        type="password" 
                        id="signupPassword" 
                        placeholder="••••••••" 
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500"
                        required
                    >
                </div>
                <div>
                    <label for="signupConfirmPassword" class="block text-gray-700 mb-2">Confirm Password</label>
                    <input 
                        type="password" 
                        id="signupConfirmPassword" 
                        placeholder="••••••••" 
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500"
                        required
                    >
                </div>
                <button 
                    type="submit" 
                    class="w-full bg-pink-500 text-white py-2 rounded-lg hover:bg-pink-600 transition duration-300"
                >
                    Create Account →
                </button>
            </form>
            <div class="mt-4 text-center">
                <p class="text-gray-600">
                    Already have an account? 
                    <a href="#" id="loginLink" class="text-pink-500 hover:underline">Log in</a>
                </p>
            </div>
        </div>
    </div>

    <script>
        // Toggle Signup Modal
        const signupLink = document.getElementById('signupLink');
        const loginLink = document.getElementById('loginLink');
        const signupModal = document.getElementById('signupModal');

        signupLink.addEventListener('click', (e) => {
            e.preventDefault();
            signupModal.classList.remove('hidden');
            signupModal.classList.add('flex');
        });

        loginLink.addEventListener('click', (e) => {
            e.preventDefault();
            signupModal.classList.remove('flex');
            signupModal.classList.add('hidden');
        });

        // Close modal when clicking outside
        signupModal.addEventListener('click', (e) => {
            if (e.target === signupModal) {
                signupModal.classList.remove('flex');
                signupModal.classList.add('hidden');
            }
        });

        // Form Submission Handlers (Placeholder)
        document.getElementById('loginForm').addEventListener('submit', (e) => {
            e.preventDefault();
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            // Implement login logic here
            console.log('Login attempt:', email);
        });

        document.getElementById('signupForm').addEventListener('submit', (e) => {
            e.preventDefault();
            const name = document.getElementById('signupName').value;
            const email = document.getElementById('signupEmail').value;
            const password = document.getElementById('signupPassword').value;
            const confirmPassword = document.getElementById('signupConfirmPassword').value;

            // Basic password validation
            if (password !== confirmPassword) {
                alert('Passwords do not match');
                return;
            }

            // Implement signup logic here
            console.log('Signup attempt:', name, email);
        });
    </script>
</body>
</html>






homepage.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WiserCycle - Menstruation Tracker</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="periodhomepage.css"> <!-- External CSS file -->
</head>
<body class="bg-gray-50">
    <!-- Navigation -->
    <nav class="navbar">
        <div class="container">
            <div class="logo-container">
                <img src="assets/logo.png" alt="WiserCycle Logo" class="logo">
                <h1 class="brand-name">WiserCycle</h1>
            </div>
            <div class="nav-links">
                <a href="#" class="nav-link">HOME</a>
                <div class="nav-item">
                    <a href="#" class="nav-link dropdown-trigger">ABOUT <i class="fas fa-chevron-down"></i></a>
                    <div class="dropdown-menu">
                        <a href="#">Our Mission</a>
                        <a href="#">Our Team</a>
                    </div>
                </div>
                <div class="nav-item">
                    <a href="#" class="nav-link dropdown-trigger">SERVICES <i class="fas fa-chevron-down"></i></a>
                    <div class="dropdown-menu">
                        <a href="#">Cycle Tracking</a>
                        <a href="#">Health Insights</a>
                    </div>
                </div>
                <a href="#" class="nav-link">CONTACT</a>
                <button id="loginBtn" class="btn-primary">Login</button>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <header class="hero">
        <div class="container hero-content">
            <div class="hero-text">
                <h2>Track Your Cycle, Understand Your Body</h2>
                <p>WiserCycle helps you monitor your menstrual health with personalized insights and predictions.</p>
                <div class="hero-buttons">
                    <button id="getStartedBtn" class="btn-primary">Get Started</button>
                    <button class="btn-secondary">Learn More</button>
                </div>
            </div>
            <div class="hero-image">
                <img src="assets/bar-graph.png" alt="Bar Graph">
            </div>
        </div>
    </header>

    <!-- Features Section -->
    <section class="features">
        <div class="container">
            <h3>Features That Empower You</h3>
            <div class="feature-grid">
                <div class="feature-card">
                    <i class="fas fa-calendar-alt"></i>
                    <h4>Cycle Tracking</h4>
                    <p>Log and predict your menstrual cycles with accuracy.</p>
                </div>
                <div class="feature-card">
                    <i class="fas fa-chart-line"></i>
                    <h4>Health Insights</h4>
                    <p>Understand your body's patterns and symptoms.</p>
                </div>
                <div class="feature-card">
                    <i class="fas fa-lock"></i>
                    <h4>Privacy First</h4>
                    <p>Your data is completely secure and private.</p>
                </div>
            </div>
        </div>
    </section>

    <script>
        document.getElementById('getStartedBtn').addEventListener('click', function() {
            window.open('periodloginpage.html', '_blank', 'fullscreen=yes');
        });

        document.getElementById('loginBtn').addEventListener('click', function() {
            window.open('periodloginpage.html', '_blank', 'fullscreen=yes');
        });
    </script>
</body>
</html>



homepage.css
/* Root Variables */
:root {
    --primary-color: #D8BFD8;
    --secondary-color: #E6E6FA;
    --accent-color: #8A4FFF;
    --text-color: #4A255F;
}

/* General Styles */
body {
    font-family: 'Arial', sans-serif;
    color: var(--text-color);
    margin: 0;
    padding: 0;
}

/* Navbar */
.navbar {
    background-color: var(--primary-color);
    padding: 0.0000001px 0;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
}

.container {
    max-width: 1500px;
    margin: 0 auto;
    padding: 0 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* Logo */
.logo-container {
    display: flex;
    align-items: center;
}

.logo {
    height: 100px; /* Adjust logo size */
    width: auto;
}

.brand-name {
    font-size: 22px;
    font-weight: bold;
    color: var(--text-color);
    margin-left: 10px;
}

/* Navigation Links */
.nav-links {
    display: flex;
    align-items: center;
    gap: 20px;
}

.nav-link {
    color: var(--text-color);
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
}

.nav-link:hover {
    color: var(--accent-color);
    transform: scale(1.05);
}

/* Dropdown Menus */
.nav-item {
    position: relative;
}

.dropdown-menu {
    display: none;
    position: absolute;
    background: white;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    padding: 10px;
    border-radius: 5px;
    min-width: 150px;
    top: 100%;
}

.nav-item:hover .dropdown-menu {
    display: block;
}

.dropdown-menu a {
    display: block;
    color: var(--text-color);
    padding: 8px;
    text-decoration: none;
}

.dropdown-menu a:hover {
    background-color: var(--secondary-color);
}

/* Buttons */
.btn-primary {
    background-color: var(--accent-color);
    color: white;
    padding: 10px 20px;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    transform: scale(1.05);
    opacity: 0.9;
}

.btn-secondary {
    border: 2px solid var(--accent-color);
    color: var(--text-color);
    padding: 10px 20px;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-secondary:hover {
    background-color: var(--secondary-color);
}

/* Hero Section */
.hero {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    padding: 80px 0;
    text-align: center;
}

.hero-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.hero-text {
    max-width: 50%;
    text-align: left;
}

.hero-text h2 {
    font-size: 36px;
    color: var(--text-color);
}

.hero-text p {
    font-size: 18px;
    margin-bottom: 20px;
}

.hero-buttons {
    display: flex;
    gap: 15px;
}

.hero-image img {
    width: 300px;
    border-radius: 30px;
    box-shadow: 0 8px 6px rgba(0,0,0,0.1);
}

/* Features Section */
.features {
    padding: 80px 0;
    text-align: center;
}

.features h3 {
    font-size: 30px;
    color: var(--text-color);
    margin-bottom: 40px;
}

.feature-grid {
    display: flex;
    justify-content: center;
    gap: 50px;
}

.feature-card {
    background: var(--secondary-color);
    padding: 20px;
    border-radius: 10px;
    text-align: center;
    width: 250px;
}

.feature-card i {
    font-size: 40px;
    color: var(--accent-color);
    margin-bottom: 10px;
}

.feature-card h4 {
    font-size: 20px;
    font-weight: bold;
    color: var(--text-color);
}

.feature-card p {
    font-size: 16px;
    color: var(--text-color);
}




homepage.js
// User Authentication Module
class AuthManager {
    constructor() {
        this.users = [];
        this.currentUser = null;
    }

    register(email, password) {
        // Basic registration logic
        const userExists = this.users.some(user => user.email === email);
        if (userExists) {
            throw new Error('User already exists');
        }
        
        const newUser = {
            email,
            password, // In real app, hash the password
            id: Date.now()
        };
        
        this.users.push(newUser);
        return newUser;
    }

    login(email, password) {
        const user = this.users.find(
            u => u.email === email && u.password === password
        );
        
        if (user) {
            this.currentUser = user;
            return user;
        }
        
        throw new Error('Invalid credentials');
    }

    logout() {
        this.currentUser = null;
    }
}

// Cycle Tracking Module
class CycleTracker {
    constructor(user) {
        this.user = user;
        this.cycles = [];
    }

    logCycle(startDate, duration, symptoms) {
        const cycle = {
            id: Date.now(),
            startDate,
            duration,
            symptoms,
            predictedNextCycle: this.predictNextCycle(startDate, duration)
        };

        this.cycles.push(cycle);
        return cycle;
    }

    predictNextCycle(lastStartDate, averageDuration) {
        const nextCycleDate = new Date(lastStartDate);
        nextCycleDate.setDate(nextCycleDate.getDate() + averageDuration);
        return nextCycleDate;
    }

    getCycleHistory() {
        return this.cycles;
    }
}

// Initialize authentication and cycle tracking
const authManager = new AuthManager();